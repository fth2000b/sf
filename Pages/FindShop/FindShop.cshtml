@page
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model ShopFinder.Pages.FindShop.FindShopModel
@using ShopFinder.Model

@{
    ViewData["Title"] = "FindShop";
}
<head>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCx-VRag4yn9f9czgmzHr-8M9Lo_l_zbvQ"
            type="text/javascript"></script>
</head>
<h5 class="text-primary">Find Shop</h5>

<script type="text/javascript">
    // var currentlocation;

    function getLocation() {
        navigator.geolocation.getCurrentPosition(function (position) {
            var currentPosition = position.coords.latitude + "," + position.coords.longitude;
            var location = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            var mapOptions = {
                center: location,
                zoom: 15,
                minZoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            var map = new google.maps.Map(document.getElementById("myDiv"), mapOptions);

            //Set Marker on the Map
            var marker = new google.maps.Marker({
                position: location,
                animation: google.maps.Animation.BOUNCE,
            });
            marker.setMap(map);

        });
        //  document.getElementById("gps").value = currentPosition
        $('#gps').val(currentPosition);
    }
</script>

<body onLoad="getLocation()">
    @{
        User user = HttpContextAccessor.HttpContext.Session.GetObjectFromJson<User>("User");
    }
    <div id="myDiv" style="width:100%;height:500px;"></div>
    <input type="hidden" value="" name="gps" id="gps" asp-for="@Model.geoLocations" />
    <table class="table">
        <thead>
            <tr>
                <th>
                    Shop Name
                </th>
                <th>
                    Is Open
                </th>
                <th>
                    Conatct Person
                </th>
                <th>
                    Address
                </th>
                <th>
                    Contacts
                </th>
            </tr>
        </thead>
        <tbody>


            @if (Model.Shop != null)
            {
                @foreach (var item in Model.Shop)
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ShopName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsOpen)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ConatctPerson)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address) ,@Html.DisplayFor(modelItem => item.Address2), @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactNo1) ,@Html.DisplayFor(modelItem => item.ContactNo2),@Html.DisplayFor(modelItem => item.ContactNo3)
                </td>

                <td>
                    <a asp-page="/RequestsPages/Create" asp-route-id="@item.ID" class="btn btn-primary">Buy</a>
                </td>

                @{

                    IEnumerable<CustRequest> resultStream = item.Requests;
                    if (resultStream!=null)
                    {
                        resultStream = resultStream.Where(x => x.UserID == user.ID);
                        resultStream = resultStream.Where(x => x.RequestStatus != "Deliverd");

                    }

                    if (resultStream != null)
                    {
                        if (resultStream.Count()>0)
                        {
                            <td>
                                <a asp-page="/RequestsPages/Index" asp-route-id="@item.ID" class="btn btn-warning">Pending</a>
                            </td>
                        }
                    }
                }

            </tr>
                }
            }

        </tbody>
    </table>.
</body>
